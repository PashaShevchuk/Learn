    * Что происходит, когда пользователь набирает в браузере адрес сайта
https://vc.ru/selectel/76371-chto-proishodit-kogda-polzovatel-nabiraet-v-brauzere-adres-sayta

    * Різниця між HTTP та HTTPS
https://hostiq.ua/wiki/ukr/http-https/
https://wiki.merionet.ru/servernye-resheniya/85/v-chem-raznica-mezhdu-http-i-https/
https://highload.today/protokol-http/

    * REST - це архітектурний паттерн
https://blog.skillfactory.ru/glossary/rest-api/

Representational State Transfer (REST) в переводе — это передача состояния представления. Технология позволяет получать
и модифицировать данные и состояния удаленных приложений, передавая HTTP-вызовы через интернет или любую другую сеть.

    * Принципы REST API (7):
- Отделения клиента от сервера (Client-Server). Клиент — это пользовательский интерфейс сайта или приложения, например,
поисковая строка видеохостинга. В REST API код запросов остается на стороне клиента, а код для доступа к данным — на
стороне сервера. Это упрощает организацию API, позволяет легко переносить пользовательский интерфейс на другую платформу
и дает возможность лучше масштабировать серверное хранение данных.

- Отсутствие записи состояния клиента (Stateless). Сервер не должен хранить информацию о состоянии (проведенных операций)
клиента. Каждый запрос от клиента должен содержать только ту информацию, которая нужна для получения данных от сервера.

- Кэшируемость (Cacheable). В данных запроса должно быть указано, нужно ли кэшировать данные (сохранять в специальном
буфере для частых запросов). Если такое указание есть, клиент получит право обращаться к этому буферу при необходимости.

- Единство интерфейса (Uniform Interface). Все данные должны запрашиваться через один URL-адрес стандартными протоколами,
например, HTTP. Это упрощает архитектуру сайта или приложения и делает взаимодействие с сервером понятнее.

- Многоуровневость системы (Layered System). В RESTful сервера могут располагаться на разных уровнях, при этом каждый
сервер взаимодействует только с ближайшими уровнями и не связан запросами с другими.

- Предоставление кода по запросу (Code on Demand). Серверы могут отправлять клиенту код (например, скрипт для запуска
видео). Так общий код приложения или сайта становится сложнее только при необходимости.

- Начало от нуля (Starting with the Null Style). Клиент знает только одну точку входа на сервер. Дальнейшие возможности
по взаимодействию обеспечиваются сервером.
